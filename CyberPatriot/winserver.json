{
  "variables": {
    "vm_name": "Windows2012r2-AD-FTP",
    "iso_url": "https://files.gingertechnology.net/packersystems/Win2012R2.iso",
    "iso_checksum_type": "md5",
    "iso_checksum": "0e7c09aab20dec3cd7eab236dab90e78",
    "autounattend": "floppy/Win2012/Autounattend.xml",
    "headless": "false",
    "cpus": "2",
    "memory_size": "2048",
    "disk_size": "40960",
    "version": "0.1.0"
  },
  "builders": [
    {
      "type": "vmware-iso",
      "vm_name": "{{user `vm_name`}}-{{user `version`}}",
      "iso_url": "{{user `iso_url`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "iso_checksum": "{{user `iso_checksum`}}",
      "output_directory": "Builds/{{build_type}}/{{user `vm_name`}}-{{user `version`}}",
      "headless": "{{user `headless`}}",
      "boot_wait": "2m",
      "communicator": "winrm",
      "winrm_username": "GingerTech",
      "winrm_password": "UberPassword",
      "winrm_timeout": "6h",
      "shutdown_command": "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\"",
      "guest_os_type": "windows8srv-64",
      "tools_upload_flavor": "windows",
      "disk_size": "{{user `disk_size`}}",
      "vnc_port_min": 5900,
      "vnc_port_max": 5980,
      "floppy_files": [
        "{{user `autounattend`}}",
        "floppy/Win2012/00-run-all-scripts.cmd",
        "floppy/Win2012/fixnetwork.ps1",
        "floppy/Win2012/install-winrm.cmd",
        "floppy/Win2012/zz-start-transports.cmd",
        "floppy/Win2012/Update-Needed.ps1",
        "floppy/Win2012/RunPwSh.bat"
      ],
      "vmx_data": {
        "RemoteDisplay.vnc.enabled": "false",
        "RemoteDisplay.vnc.port": "5900",
        "memsize": "{{user `memory_size`}}",
        "numvcpus": "{{user `cpus`}}",
        "scsi0.virtualDev": "lsisas1068"
      }
    },
    {
      "type": "virtualbox-iso",
      "vm_name": "{{user `vm_name`}}-{{user `version`}}",
      "iso_url": "{{user `iso_url`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "iso_checksum": "{{user `iso_checksum`}}",
      "output_directory": "Builds/{{build_type}}/{{user `vm_name`}}-{{user `version`}}",
      "headless": "{{user `headless`}}",
      "boot_wait": "2m",
      "communicator": "winrm",
      "winrm_username": "GingerTech",
      "winrm_password": "UberPassword",
      "winrm_timeout": "6h",
      "shutdown_command": "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\"",
      "guest_os_type": "Windows2012_64",
      "disk_size": "{{user `disk_size`}}",
      "floppy_files": [
        "{{user `autounattend`}}",
        "floppy/Win2012/00-run-all-scripts.cmd",
        "floppy/Win2012/fixnetwork.ps1",
        "floppy/Win2012/install-winrm.cmd",
        "floppy/Win2012/zz-start-transports.cmd",
        "floppy/Win2012/Update-Needed.ps1",
        "floppy/Win2012/RunPwSh.bat"
      ],
      "vboxmanage": [
        [ "modifyvm", "{{.Name}}", "--memory", "{{user `memory_size`}}" ],
        [ "modifyvm", "{{.Name}}", "--cpus", "{{user `cpus`}}" ]
      ]
    }
  ],
  "provisioners": [
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "file",
      "source": "scripts/winshared/WinBullshit.ps1",
      "destination": "C:\\WinBullshit.ps1"
    },
    {
      "type": "file",
      "source": "files/7z920-x64.msi",
      "destination": "C:\\Windows\\Temp\\7z920-x64.msi"
    },
    {
      "type": "powershell",
      "elevated_user": "GingerTech",
      "elevated_password": "UberPassword",
      "inline": [
        "C:\\WinBullshit.ps1 1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-shell",
      "execute_command": "{{.Vars}} cmd /c C:\\Windows\\Temp\\script.bat",
      "scripts": [
        "scripts/winshared/guest-tools.bat"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "file",
      "source": "scripts/winshared/InstallScoop.ps1",
      "destination": "C:\\InstallScoop.ps1"
    },
    {
      "type": "powershell",
      "inline": [
        "powershell -NoLogo -ExecutionPolicy RemoteSigned C:\\InstallScoop.ps1"
      ]
    },
    {
      "type": "file",
      "source": "files/userlist-win.csv",
      "destination": "C:\\userlist.csv"
    },
    {
      "type": "file",
      "source": "files/eicar.com",
      "destination": "C:\\eicar.com"
    },
    {
      "type": "windows-shell",
      "inline": "MOVE /Y C:\\eicar.com C:\\Windows\\system32\\eicar.com"
    },
    {
      "type": "powershell",
      "elevated_user": "GingerTech",
      "elevated_password": "UberPassword",
      "scripts": [
        "scripts/winserver/Setup.ps1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "powershell",
      "elevated_user": "GINGERTECH\\GingerTech",
      "elevated_password": "UberPassword",
      "scripts": [
        "scripts/winserver/MoreSetup.ps1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot complete'}}\""
    }
  ]
}